name: Build and Deploy Image

on:
  push:
    branches:
    - 'development'

env:
  PROJECT_ID: ${{ secrets.DEV_GKE_NOC_PROJECT }}
  GKE_REGION: us-central1
  GKE_CLUSTER: noc
  IMAGE: dispatcher-jira-paygo
  APP_PORT: 9578
  VERSION: 2.1.2

jobs:
  build_and_deploy_docker:
    name: Build and Deploy Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.DEV_GKE_NOC_SA_KEY }}
        project_id: ${{ secrets.DEV_GKE_NOC_PROJECT }}

    - name: Configure Docker 
      run: |-
        gcloud --quiet auth configure-docker
  
    # - name: Build Docker Image
      # run: |-
      #   docker build --build-arg APP_PORT=${{ env.APP_PORT }} --tag "gcr.io/$PROJECT_ID/$IMAGE:${{ env.VERSION }}.${{ steps.vars.outputs.sha_short }}" .
    
    # - name: Deploys Docker Image
      # run: |
      #   docker push "gcr.io/$PROJECT_ID/$IMAGE:${{ env.VERSION }}.${{ steps.vars.outputs.sha_short }}"
    
    
    - name: Get The GKE credentials
      run: |-
        export GET_CMD="gcloud container clusters describe noc --region=us-central1"
        cat > kubeconfig.yaml <<EOF
        apiVersion: v1
        kind: Config
        current-context: my-cluster
        contexts: [{name: my-cluster, context: {cluster: cluster-1, user: user-1}}]
        users: [{name: user-1, user: {auth-provider: {name: gcp}}}]  
        clusters:
        - name: cluster-1
          cluster:
            server: "https://$(eval "$GET_CMD --format='value(endpoint)'")"
            certificate-authority-data: "$(eval "$GET_CMD --format='value(masterAuth.clusterCaCertificate)'")"
        EOF
        cat kubeconfig.yaml
        
      env: 
        KUBECONFIG: kubeconfig.yaml
          
                
    - name: 'Deploy'
      uses: 'deliverybot/helm@v1'
      with:
        release: 'dispatcher-jira'
        namespace: 'paygo'
        chart: 'helm'
        values: |
          port: 8080
          domain: qa-dispatcher.jira.paygo.noc.grooveops.io
          image: gcr.io/dispatcher-dev-325420/dispatcher-jira-paygo:2.1.2.74fd1e7
          bucket: dispatcher-dev-rules
          gcpServiceAccount: dispatcher-jira@dispatcher-dev-325420.iam.gserviceaccount.com
          secrets:
            endpoint: https://paygo.atlassian.net/
            username: dejair.santos@paygo-consult.com.br
            tokenapi: fhAHn1XAW3p5zdzsQLSTD239
        helm: helm3
      env: 
        KUBECONFIG: /github/workspace/kubeconfig.yaml
        
        
