name: Build and Deploy Image

on:
  push:
    branches:
    - 'development'

env:
  PROJECT_ID: dispatcher-dev-325420
  GKE_REGION: us-central1
  GCP_SERVICE_ACCOUNT: dispatcher-jira@dispatcher-dev-325420.iam.gserviceaccount.com
  GCP_BUCKET: dispatcher-dev-rules
  DOMAIN: qa-dispatcher.jira.paygo.noc.grooveops.io
  GKE_CLUSTER: noc
  JIRA_TOKEN: ${{ secrets.DEV_JIRA_TOKEN }}
  JIRA_USER: ${{ secrets.DEV_JIRA_USER }}
  IMAGE: dispatcher-jira-paygo
  APP_PORT: 9578
  VERSION: 2.1.3

jobs:
  build_and_deploy_docker:
    name: Build and Deploy Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.DEV_GKE_NOC_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker 
      run: |-
        gcloud --quiet auth configure-docker
  
    - name: Build Docker Image
      run: |-
        docker build --build-arg APP_PORT=${{ env.APP_PORT }} --tag "gcr.io/$PROJECT_ID/$IMAGE:${{ env.VERSION }}.${{ steps.vars.outputs.sha_short }}" .
    
    - name: Deploys Docker Image
      run: |
        docker push "gcr.io/$PROJECT_ID/$IMAGE:${{ env.VERSION }}.${{ steps.vars.outputs.sha_short }}"
    
    
    - name: Get The GKE credentials
      run: |-
        export GET_CMD="gcloud container clusters describe noc --region=us-central1"
        cat > kubeconfig.yaml <<EOF
        apiVersion: v1
        kind: Config
        current-context: my-cluster
        contexts: [{name: my-cluster, context: {cluster: cluster-1, user: user-1}}]
        users: [{name: user-1, user: {auth-provider: {name: gcp}}}]  
        clusters:
        - name: cluster-1
          cluster:
            server: "https://$(eval "$GET_CMD --format='value(endpoint)'")"
            certificate-authority-data: "$(eval "$GET_CMD --format='value(masterAuth.clusterCaCertificate)'")"
        EOF
        cat kubeconfig.yaml
        echo "$SA_KEY" > service_account.json
        cat service_account.json
        
      env: 
        SA_KEY: ${{ secrets.DEV_GKE_NOC_SA_KEY}}
        
          
                
    - name: 'Deploy'
      uses: 'deliverybot/helm@v1'
      with:
        release: 'dispatcher-jira'
        namespace: 'paygo'
        chart: 'helm'
        values: |
          port: 8080
          domain: ${{ env.DOMAIN }}
          image: gcr.io/$PROJECT_ID/$IMAGE:${{ env.VERSION }}.${{ steps.vars.outputs.sha_short }}
          bucket: ${{ env.GCP_BUCKET }} 
          gcpServiceAccount: ${{ env.GCP_SERVICE_ACCOUNT }}
          secrets:
            endpoint: https://paygo.atlassian.net/
            username: ${{ env.JIRA_USER }}
            tokenapi: ${{ env.JIRA_TOKEN }}
        helm: helm3
      env: 
        KUBECONFIG: /github/workspace/kubeconfig.yaml
        GOOGLE_APPLICATION_CREDENTIALS: /github/workspace/service_account.json

        
